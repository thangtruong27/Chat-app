<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Messeger</title>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU"
        crossorigin="anonymous">
    <link rel="stylesheet" href="/style.css">
</head>

<body class="flex-container">
    <div class="control-panel">
        <div class="tab">
            <button class="tab-link" onclick="openTab(event, 'recent')">Recent</button>
            <button class="tab-link" id="btn-active-users" onclick="openTab(event, 'active-users')">Active users</button>
        </div>
        <div id="recent" class="tab-content">
            <ul class="list-recent-msgs"></ul>
        </div>
        <div id="active-users" class="tab-content">
            <ul class="list-active-users"></ul>
        </div>
    </div>
    <div class="messages">
        <div class="nickname-container">
            <div>Your nickname:<div id="nickname"><%= nickname %></div></div>
        </div>
        <div class="msgs-area">
            <ul class="list-msgs">
            </ul>
            <ul class="list-typing-msgs">                
            </ul>
        </div>
        <form class="msg-input flex-container" action="">
            <input type="text" class="txt-input" placeholder="Text a message..." required>
            <label for="file-input" style="cursor: pointer; ">
                <i class="fas fa-image fa-align-center fa-4x"></i>
            </label>            
            <input id="file-input" style="display:none" type="file" >
            <button type="submit" class="btn-send">Send</button>
        </form>
    </div>

</body>

</html>
<script>
    function openTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tab-content");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tab-link");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    document.getElementById("btn-active-users").click();
</script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>
    $(function () {
        var socket = io();
        
        const nickname = $('#nickname').text();
        socket.emit('new active user',nickname);

        /*Trigger event when user sent a messgae*/
        $('form').submit(function () {
            let msg = $('.txt-input').val();
            socket.emit('new message', {
                'nickname': nickname,
                'data': msg,
                'type': 'text'
            });
            $('.txt-input').val('');
            $('.list-msgs').append($('<li style="" class="msg-owner">').text(`${msg}`));
            const msgs = document.getElementsByClassName("msgs-area")[0];
            msgs.scrollTop = msgs.scrollHeight - msgs.clientHeight;
            return false;
        });

        /*Trigger even when user selected a image*/
        $('#file-input').change(function(){
            const selector = document.getElementById("file-input");        
            const reader = new FileReader();
            reader.onload = function (e) {
                //img.src = e.target.result;
                socket.emit("new a image", { 
                    nickname:  nickname,
                    base64: e.target.result,                     
                });
            }
            reader.readAsDataURL(selector.files[0]);
            return false;
        });

        /* Receive a image*/
        socket.on('receive a image', function (data) {
            $('.list-msgs').append($(`<li><img class="msg-img" src="${data.path}"></li>`));
        });

        /*Trigger event when user's typing*/
        $('.txt-input').focus(function () {
            socket.emit('typing', nickname);
        });

        /*Trigger event when user stop typing*/
        $('.txt-input').focusout(function () {
            socket.emit('stop typing', nickname);
        });

        /* Add participants*/
        socket.on('add active users', function (users) {
            users.forEach(user => {
                $('.list-active-users').append($('<li>').text(`${user.nickname} is online`));
            });
        });

        /*Add new user*/
        socket.on('new active user', function (nickname) {
            $('.list-active-users').append($('<li>').text(`${nickname} is online`));
        });

        /*Add participants messages*/
        socket.on('add participants messages', function (msgs) {
            msgs.forEach(msg => {
                if(msg.type == 'text') {
                    if(msg.nickname != nickname){
                        $('.list-msgs').append($('<li class="msg-nickname">').text(`${msg.nickname}`));
                        $('.list-msgs').append($('<li class="msg-data">').text(`${msg.data}`));
                    } else {
                        $('.list-msgs').append($('<li style="" class="msg-owner">').text(`${msg.data}`));                        
                    }                   
                } else {
                    $('.list-msgs').append($(`<li><img class="msg-img" src="${msg.data}"></li>`));
                }
            });                      
        });

        /*Add new message*/
        socket.on('new message', function (msg) {
            $('.list-msgs').append($('<li class="msg-nickname">').text(`${msg.nickname}`));
            $('.list-msgs').append($('<li class="msg-data">').text(`${msg.data}`));
            const msgs = document.getElementsByClassName("msgs-area")[0];
            msgs.scrollTop = msgs.scrollHeight - msgs.clientHeight;
        });

        /*When someone stop typing*/
        socket.on('stop typing', function (nickname) {
            $('.list-typing-msgs').find(`#${nickname}isTyping`).remove();
        });

        /*When someone's typing*/
        socket.on('typing', function (nickname) {
            $('.list-typing-msgs').append($(`<li class="msg-typing" id="${nickname}isTyping">`).text(`${nickname} is typing`));
        });
    });
</script>